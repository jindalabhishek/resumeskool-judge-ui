#
name: Deploy

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  push:
    branches: ['master']

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install

      - name: Build DLL
        run: npm run build:dll

      - name: Build project
        run: npm run build

      - name: Check paths1
        run: ls /home/runner/work/

      - name: Check paths2
        run: ls /home/runner/work/resumeskool-judge-ui

      - name: Check paths3
        run: ls /home/runner/work/resumeskool-judge-ui/resumeskool-judge-ui

      - name: Upload production-ready build files
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ./dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist.zip
          asset_name: build.zip
          asset_content_type: application/zip
